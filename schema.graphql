directive @collection(name: String!) on OBJECT

directive @embedded on OBJECT

directive @index(name: String!) on FIELD_DEFINITION

directive @relation(name: String) on FIELD_DEFINITION

directive @resolver(name: String, paginated: Boolean! = false) on FIELD_DEFINITION

directive @unique(index: String) on FIELD_DEFINITION

scalar Date

type DhtReading {
  """The document's ID."""
  _id: ID!

  """The document's timestamp."""
  _ts: Long!
  createdAt: Time!
  humidity: Float!
  modifiedAt: Time!
  tempCel: Float!
  tempFahr: Float!
}

"""'DhtReading' input values"""
input DhtReadingInput {
  createdAt: Time!
  humidity: Float!
  modifiedAt: Time!
  tempCel: Float!
  tempFahr: Float!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  """Create a new document in the collection of 'DhtReading'"""
  createDhtReading(
    """'DhtReading' input values"""
    data: DhtReadingInput!
  ): DhtReading!

  """Delete an existing document in the collection of 'DhtReading'"""
  deleteDhtReading(
    """The 'DhtReading' document's ID"""
    id: ID!
  ): DhtReading

  """
  Partially updates an existing document in the collection of 'DhtReading'. It only modifies the values that are specified in the arguments. During execution, it verifies that required fields are not set to 'null'.
  """
  partialUpdateDhtReading(
    """'DhtReading' input values"""
    data: PartialUpdateDhtReadingInput!

    """The 'DhtReading' document's ID"""
    id: ID!
  ): DhtReading

  """Update an existing document in the collection of 'DhtReading'"""
  updateDhtReading(
    """'DhtReading' input values"""
    data: DhtReadingInput!

    """The 'DhtReading' document's ID"""
    id: ID!
  ): DhtReading
}

"""'DhtReading' input values"""
input PartialUpdateDhtReadingInput {
  createdAt: Time
  humidity: Float
  modifiedAt: Time
  tempCel: Float
  tempFahr: Float
}

type Query {
  """Find a document from the collection of 'DhtReading' by its id."""
  findDhtReadingByID(
    """The 'DhtReading' document's ID"""
    id: ID!
  ): DhtReading
  getDhtReadingsByTimeRange(endTs: String!, startTs: String!): [DhtReading]
}

scalar Time
